[{"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\index.js":"1","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\App.js":"2","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Demo.js":"3","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Header.js":"4","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Home.js":"5","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Helper\\EventsHelper.js":"6","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Layout.js":"7","D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\PersonalInfo.js":"8"},{"size":191,"mtime":1611550610280,"results":"9","hashOfConfig":"10"},{"size":494,"mtime":1611590228202,"results":"11","hashOfConfig":"10"},{"size":1052,"mtime":1611550923950,"results":"12","hashOfConfig":"10"},{"size":445,"mtime":1611551695962,"results":"13","hashOfConfig":"10"},{"size":147,"mtime":1611592410050,"results":"14","hashOfConfig":"10"},{"size":4721,"mtime":1611588189252,"results":"15","hashOfConfig":"10"},{"size":439,"mtime":1611592432775,"results":"16","hashOfConfig":"10"},{"size":16472,"mtime":1611595997253,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t5qisa",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\index.js",[],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\App.js",["36","37","38"],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Demo.js",[],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Header.js",["39","40","41","42"],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Home.js",[],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Helper\\EventsHelper.js",["43","44","45"],"export default class EventHelper \r\n{\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n    getValueByLastindex(inputtext,type)\r\n    {\r\n        let lastValue = false;\r\n        var numRegex = /^[0-9]*$/;  \r\n        var charRegex = /^[a-zA-Z]*$/;\r\n        var emailRegex= /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if(inputtext.length>0)\r\n        {  \r\n\r\n            if(type==='STRING')\r\n            {\r\n                let output=inputtext.match(charRegex); \r\n                if(output!=null)\r\n                {\r\n                    lastValue=true;\r\n                } \r\n            }\r\n            else if(type==='NUMBER')\r\n            {    \r\n                let output=inputtext.match(numRegex);\r\n                if(output!=null)\r\n                {\r\n                    lastValue=true;\r\n                } \r\n            }\r\n            else if(type==='EMAIL')\r\n            {\r\n                let output=inputtext.match(emailRegex);\r\n                if(output!=null)\r\n                {\r\n                    lastValue=true;\r\n                } \r\n            }\r\n        }\r\n     \r\n        return lastValue;\r\n    } \r\n\r\n    validateInput(typeofObject,value,compare,objectName,objcode,maxlength)\r\n    { \r\n        // True for Error Response \r\n        // False for Success Response\r\n        let output = { status:'',message:'',type:typeofObject,ip:value,parent:'' }\r\n        if(value.length===0)\r\n        {\r\n            output = { status:true,message:`Please Enter ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n        }\r\n        else if(typeofObject==='COMPARE_EMAIL')\r\n        {\r\n            let emails = objectName.split('-');\r\n            let emailOne = this.getValueByLastindex(value,'EMAIL');            \r\n            let emailTwo = this.getValueByLastindex(compare,'EMAIL');\r\n            if(emailOne===false && emailTwo===false)\r\n            {\r\n                output = { status:true,message:`Invalid both ${objectName}`,type:typeofObject,ip:value,parent:objcode } \r\n            }\r\n            else if(emailOne===false && emailTwo===true)\r\n            {\r\n                output = { status:true,message:`Invalid ${emails[0]}`,type:typeofObject,ip:value,parent:objcode } \r\n            }\r\n            else if(emailOne===true && emailTwo=== false)\r\n            {                \r\n                output = { status:true,message:`Invalid ${emails[1]}`,type:typeofObject,ip:value,parent:objcode } \r\n            }\r\n            else\r\n            {\r\n                if(value==compare)\r\n                {\r\n                    output = { status:false,message:`Valid ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n                }\r\n                else\r\n                {\r\n                    output = { status:true,message:'Confirm Email is not same as Email',type:typeofObject,ip:value,parent:objcode } \r\n                } \r\n            }\r\n        }\r\n        else\r\n        {\r\n            let status = this.getValueByLastindex(value,typeofObject);\r\n            let maxSize=false;\r\n              \r\n                if(value.length==maxlength)\r\n                {\r\n                    maxSize=true;\r\n                }  \r\n \r\n                if(maxlength===0)\r\n                {\r\n                    if(status===false)\r\n                    {\r\n                        output = { status:true,message:`Invalid ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n                    }\r\n                    else\r\n                    {\r\n                        output = { status:false,message:`Valid ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n                    }   \r\n                }\r\n                else\r\n                {\r\n                    if(status===false && maxSize===false)\r\n                    {\r\n                        output = { status:true,message:`Invalid ${objectName} and maximum length not reached`,type:typeofObject,ip:value,parent:objcode }\r\n                    }\r\n                    else if(status===false && maxSize===true)\r\n                    {\r\n                        output = { status:true,message:`Invalid ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n                    }\r\n                    else if(status===true && maxSize===false)\r\n                    {\r\n                        output = { status:true,message:`Maximum length not reached for ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n                    }\r\n                    else\r\n                    {\r\n                        output = { status:false,message:`Valid ${objectName}`,type:typeofObject,ip:value,parent:objcode }\r\n                    }   \r\n                }\r\n                 \r\n            \r\n        }\r\n        return output;\r\n    }\r\n\r\n}\r\n",["46","47"],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\Layout.js",[],"D:\\Projects\\React\\CTS_tasks\\formfieldcts\\src\\Components\\PersonalInfo.js",["48","49","50","51","52"],{"ruleId":"53","severity":1,"message":"54","line":3,"column":29,"nodeType":"55","messageId":"56","endLine":3,"endColumn":33},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":12},{"ruleId":"53","severity":1,"message":"58","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":7,"column":9,"nodeType":"61","endLine":7,"endColumn":55},{"ruleId":"59","severity":1,"message":"60","line":8,"column":9,"nodeType":"61","endLine":8,"endColumn":55},{"ruleId":"59","severity":1,"message":"60","line":9,"column":9,"nodeType":"61","endLine":9,"endColumn":55},{"ruleId":"59","severity":1,"message":"60","line":10,"column":9,"nodeType":"61","endLine":10,"endColumn":55},{"ruleId":"62","severity":1,"message":"63","line":3,"column":5,"nodeType":"64","messageId":"65","endLine":6,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":74,"column":25,"nodeType":"68","messageId":"69","endLine":74,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":89,"column":32,"nodeType":"68","messageId":"69","endLine":89,"endColumn":34},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"53","severity":1,"message":"74","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":67,"column":66,"nodeType":"68","messageId":"69","endLine":67,"endColumn":68},{"ruleId":"66","severity":1,"message":"67","line":88,"column":65,"nodeType":"68","messageId":"69","endLine":88,"endColumn":67},{"ruleId":"66","severity":1,"message":"67","line":107,"column":61,"nodeType":"68","messageId":"69","endLine":107,"endColumn":63},{"ruleId":"66","severity":1,"message":"67","line":115,"column":68,"nodeType":"68","messageId":"69","endLine":115,"endColumn":70},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Demo' is defined but never used.","'Home' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'DoneIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]